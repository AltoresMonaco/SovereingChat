# For more information, see the Configuration Guide:
# https://www.librechat.ai/docs/configuration/librechat_yaml

# Configuration version (required)
version: 1.2.8

# Cache settings: Set to true to enable caching
cache: true

# File storage configuration
# Single strategy for all file types (legacy format, still supported)
# fileStrategy: "s3"

# Granular file storage strategies (new format - recommended)
# Allows different storage strategies for different file types
# fileStrategy:
#   avatar: "s3"        # Storage for user/agent avatar images
#   image: "firebase"   # Storage for uploaded images in chats
#   document: "local"   # Storage for document uploads (PDFs, text files, etc.)

# Available strategies: "local", "s3", "firebase"
# If not specified, defaults to "local" for all file types
# You can mix and match strategies based on your needs:
# - Use S3 for avatars for fast global access
# - Use Firebase for images with automatic optimization
# - Use local storage for documents for privacy/compliance

# Custom interface configuration
interface:
  privacyPolicy: false
  TermsOfService: false
  modelSelect: true
  parameters: true
  sidePanel: true
  presets: true
  prompts: true
  bookmarks: true
  multiConvo: true
  agents: true
  customWelcome: "Salut {{user.name}}! Bienvenue sur Altores Sovereign Intelligence!"
  runCode: false
  webSearch: false
  fileSearch: true
  fileCitations: true

# Example Cloudflare turnstile (optional)
#turnstile:
#  siteKey: "your-site-key-here"
#  options:
#    language: "auto"    # "auto" or an ISO 639-1 language code (e.g. en)
#    size: "normal"      # Options: "normal", "compact", "flexible", or "invisible"

# Example Registration Object Structure (optional)
registration:
  socialLogins: ['github', 'google', 'discord', 'openid', 'facebook', 'apple', 'saml']
  # allowedDomains:
  # - "gmail.com"

# Example Balance settings
# balance:
#   enabled: false
#   startBalance: 20000
#   autoRefillEnabled: false
#   refillIntervalValue: 30
#   refillIntervalUnit: 'days'
#   refillAmount: 10000

# speech:
#   tts:
#     openai:
#       url: ''
#       apiKey: '${TTS_API_KEY}'
#       model: ''
#       voices: ['']

#
#   stt:
#     openai:
#       url: ''
#       apiKey: '${STT_API_KEY}'
#       model: ''

# rateLimits:
#   fileUploads:
#     ipMax: 100
#     ipWindowInMinutes: 60  # Rate limit window for file uploads per IP
#     userMax: 50
#     userWindowInMinutes: 60  # Rate limit window for file uploads per user
#   conversationsImport:
#     ipMax: 100
#     ipWindowInMinutes: 60  # Rate limit window for conversation imports per IP
#     userMax: 50
#     userWindowInMinutes: 60  # Rate limit window for conversation imports per user

# Example Actions Object Structure
actions:
  allowedDomains:
    - 'swapi.dev'
    - 'librechat.ai'
    - 'google.com'

# Example MCP Servers Object Structure
# mcpServers:
#   everything:
#     # type: sse # type can optionally be omitted
#     url: http://localhost:3001/sse
#     timeout: 60000  # 1 minute timeout for this server, this is the default timeout for MCP servers.
#   puppeteer:
#     type: stdio
#     command: npx
#     args:
#       - -y
#       - "@modelcontextprotocol/server-puppeteer"
#     timeout: 300000  # 5 minutes timeout for this server
#   filesystem:
#     # type: stdio
#     command: npx
#     args:
#       - -y
#       - "@modelcontextprotocol/server-filesystem"
#       - /home/user/LibreChat/
#     iconPath: /home/user/LibreChat/client/public/assets/logo.svg
#   mcp-obsidian:
#     command: npx
#     args:
#       - -y
#       - "mcp-obsidian"
#       - /path/to/obsidian/vault

# Definition of custom endpoints
endpoints:
  assistants:
      disableBuilder: false # Disable Assistants Builder Interface by setting to `true`
  #   pollIntervalMs: 3000  # Polling interval for checking assistant updates
  #   timeoutMs: 180000  # Timeout for assistant operations
  #   # Should only be one or the other, either `supportedIds` or `excludedIds`
  #   supportedIds: ["asst_supportedAssistantId1", "asst_supportedAssistantId2"]
  #   # excludedIds: ["asst_excludedAssistantId"]
  #   # Only show assistants that the user created or that were created externally (e.g. in Assistants playground).
  #   # privateAssistants: false # Does not work with `supportedIds` or `excludedIds`
  #   # (optional) Models that support retrieval, will default to latest known OpenAI models that support the feature
  #   retrievalModels: ["gpt-4-turbo-preview"]
  #   # (optional) Assistant Capabilities available to all users. Omit the ones you wish to exclude. Defaults to list below.
  #   capabilities: ["code_interpreter", "retrieval", "actions", "tools", "image_vision"]
  # agents:
  #   # (optional) Default recursion depth for agents, defaults to 25
  #   recursionLimit: 50
  #   # (optional) Max recursion depth for agents, defaults to 25
  #   maxRecursionLimit: 100
  #   # (optional) Disable the builder interface for agents
  #   disableBuilder: false
  #   # (optional) Maximum total citations to include in agent responses, defaults to 30
  #   maxCitations: 30
  #   # (optional) Maximum citations per file to include in agent responses, defaults to 7
  #   maxCitationsPerFile: 7
  #   # (optional) Minimum relevance score for sources to be included in responses, defaults to 0.45 (45% relevance threshold)
  #   # Set to 0.0 to show all sources (no filtering), or higher like 0.7 for stricter filtering
  #   minRelevanceScore: 0.45
  #   # (optional) Agent Capabilities available to all users. Omit the ones you wish to exclude. Defaults to list below.
  #   capabilities: ["execute_code", "file_search", "actions", "tools"]
  custom:
    - name: "Ollama"
      displayLabel: "Altores"
      apiKey: "ollama"
      baseURL: "http://ollama:11434/v1/"
      iconURL: "/assets/altores.svg"
      models:
        default:
          - "altores-private-intelligence-q8:latest"
          - "altores-sovereign-intelligence-4B:latest"
          - "lucifers/Polaris-4B-Preview.Q8_0:latest"
          - "llava:latest"
          - "gemma3:4b"
        fetch: false
      # Optional: Friendly names and icons for model IDs
      modelNames:
        "altores-private-intelligence-q8:latest": "Altores Sovereign Intelligence 2.0"
        "lucifers/Polaris-4B-Preview.Q8_0:latest": "Altores Sovereign Intelligence Reasoning 1.0"
        "llava:latest": "Altores Sovereign Intelligence Vision"
        "gemma3:4b": "Altores Sovereign Intelligence 3.0"
      modelIcons:
        "altores-private-intelligence-q8:latest": "/assets/altores.svg"
        "lucifers/Polaris-4B-Preview.Q8_0:latest": "/assets/altores.svg"
        "llava:latest": "/assets/altores.svg"
      visionModels:
        - "llava:latest"
        - "gemma3:4b"

    - name: "MiniCPM"
      displayLabel: "MiniCPM"
      apiKey: "ollama"
      baseURL: "http://llamacpp:8080/v1/"
      iconURL: "/assets/altores.svg"
      models:
        default:
          - "minicpm-v-4_5:latest"
        fetch: false
      modelNames:
        "minicpm-v-4_5:latest": "MiniCPM-V 4.5 (Vision/OCR)"
      modelIcons:
        "minicpm-v-4_5:latest": "/assets/altores.svg"
      titleConvo: true
      titleModel: "current_model"
      summarize: false
      summaryModel: "current_model"
      forcePrompt: false
      modelDisplayLabel: "MiniCPM"
      # vision disabled for llama.cpp backend (text-only)

    - name: "MiniCPMVision"
      displayLabel: "MiniCPM (Vision/OCR)"
      apiKey: "ollama"
      baseURL: "http://minicpm:8000/v1/"
      iconURL: "/assets/altores.svg"
      models:
        default:
          - "minicpm-v-4_5:latest"
        fetch: false
      modelNames:
        "minicpm-v-4_5:latest": "MiniCPM-V 4.5 (Vision/OCR)"
      modelIcons:
        "minicpm-v-4_5:latest": "/assets/altores.svg"
      titleConvo: true
      titleModel: "current_model"
      summarize: false
      summaryModel: "current_model"
      forcePrompt: false
      modelDisplayLabel: "MiniCPM Vision"
      visionModels:
        - "minicpm-v-4_5:latest"


fileConfig:
  endpoints:
    default:
      fileLimit: 1
      fileSizeLimit: 200
      totalSizeLimit: 200
      supportedMimeTypes:
        - "image/.*"
        - "application/pdf"
        - "video/(mp4|webm|ogg)"
    MiniCPM:
      fileLimit: 1
      fileSizeLimit: 200
      totalSizeLimit: 200
      supportedMimeTypes:
        - "image/.*"
        - "application/pdf"
        - "video/(mp4|webm|ogg)"
  serverFileSizeLimit: 200
  avatarSizeLimit: 2
#   imageGeneration: # Image Gen settings, either percentage or px
#     percentage: 100
#     px: 1024
#   # Client-side image resizing to prevent upload errors
#   clientImageResize:
#     enabled: false  # Enable/disable client-side image resizing (default: false)
#     maxWidth: 1900  # Maximum width for resized images (default: 1900)
#     maxHeight: 1900  # Maximum height for resized images (default: 1900)
#     quality: 0.92  # JPEG quality for compression (0.0-1.0, default: 0.92)
# # See the Custom Configuration Guide for more information on Assistants Config:
# # https://www.librechat.ai/docs/configuration/librechat_yaml/object_structure/assistants_endpoint

# Memory configuration for user memories
memory:
  disabled: false
