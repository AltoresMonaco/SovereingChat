version: "3.8"

services:
  api:
    user: "1000:1000"           # évite d'avoir besoin de UID/GID
    environment:
      - NODE_ENV=production
      - CREDS_KEY=${CREDS_KEY}
      - CREDS_IV=${CREDS_IV}
      - MONGODB_URI=${MONGODB_URI}
      - SEARCH=${SEARCH}
      - MEILI_HOST=${MEILI_HOST}
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
      - MEILI_NO_ANALYTICS=${MEILI_NO_ANALYTICS}
      - RAG_ENABLED=${RAG_ENABLED}
      - RAG_API_URL=${RAG_API_URL}
      - ALLOW_REGISTRATION=${ALLOW_REGISTRATION}
      - ALLOW_EMAIL_LOGIN=${ALLOW_EMAIL_LOGIN}
      - ALLOW_SOCIAL_LOGIN=${ALLOW_SOCIAL_LOGIN}
      # Silencer les warnings du compose de base
      - UID=1000
      - GID=1000
    depends_on: []
    volumes:
      - /srv/librechat-data/uploads:/app/client/public/uploads

  client:
    user: "1000:1000"           # évite d'avoir besoin de UID/GID
    environment:
      # Satisfait le docker-compose.yml d'origine qui attend ${PORT}
      - PORT=3080
      # Silencer les warnings
      - UID=1000
      - GID=1000
    # IMPORTANT : ne pas remettre de bloc `ports:` ici,
    # on laisse le fichier de base publier ${PORT}:3080
    volumes:
      - /srv/librechat-data/uploads:/app/client/public/uploads

  meilisearch: { profiles: ["disabled"] }
  mongo: { profiles: ["disabled"] }
  rag-api: { profiles: ["disabled"] }
  pgvector: { profiles: ["disabled"] }
  litellm: { profiles: ["disabled"] }
